Xml code
-------------------------------------------------------------------
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:background="@color/black">
    <TextView
        android:id="@+id/screen"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="0"
        android:textStyle="bold"
        android:textSize="60dp"
        android:textColor="#FFFFFF"
        android:paddingHorizontal="15dp"
        android:paddingVertical="35dp"
        android:layout_above="@+id/nums" />
    <LinearLayout
        android:id="@+id/nums"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:orientation="horizontal"
        android:paddingTop="20dp">
        <LinearLayout

            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <Button
                android:id="@+id/on"
                android:text="ON"
                style="@style/Button1"/>
            <Button
                android:id="@+id/num7"
                android:text="7"
                style="@style/Button2"/>
            <Button
                android:id="@+id/num4"
                android:text="4"
                style="@style/Button2"/>
            <Button
                android:id="@+id/num1"
                android:text="1"
                style="@style/Button2"/>
            <Button
                android:id="@+id/del"
                android:text="DEL"
                style="@style/Button1"/>
        </LinearLayout>
        <LinearLayout

            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <Button
                android:id="@+id/off"
                android:text="OFF"
                style="@style/Button1"/>
            <Button
                android:id="@+id/num8"
                android:text="8"
                style="@style/Button2"/>
            <Button
                android:id="@+id/num5"
                android:text="5"
                style="@style/Button2"/>
            <Button
                android:id="@+id/num2"
                android:text="2"
                style="@style/Button2"/>
            <Button
                android:id="@+id/num0"
                android:text="0"
                style="@style/Button1"/>
        </LinearLayout>
        <LinearLayout

            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <Button
                android:id="@+id/ac"
                android:text="ac"
                style="@style/Button1"/>
            <Button
                android:id="@+id/num9"
                android:text="9"
                style="@style/Button2"/>
            <Button
                android:id="@+id/num6"
                android:text="6"
                style="@style/Button2"/>
            <Button
                android:id="@+id/num3"
                android:text="3"
                style="@style/Button2"/>
            <Button
                android:id="@+id/point"
                android:text="."
                style="@style/Button1"/>
        </LinearLayout>
        <LinearLayout

            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <Button
                android:id="@+id/div"
                android:text="/"
                style="@style/Button1"/>
            <Button
                android:id="@+id/time"
                android:text="x"
                style="@style/Button1"/>
            <Button
                android:id="@+id/add"
                android:text="+"
                style="@style/Button1"/>
            <Button
                android:id="@+id/minus"
                android:text="-"
                style="@style/Button1"/>
            <Button
                android:id="@+id/equal"
                android:text="="
                style="@style/Button1"/>
        </LinearLayout>
    </LinearLayout>
</RelativeLayout>
---------------------------------------------------------------------------------------------------------------
Calculator_Mainactivity.Java
--------------------------------------------------------------------------------------------------------------
package com.example.calculator;

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    double firstNum;
    String operation;

    // Define a Handler
    private final Handler handler = new Handler();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button num0 = findViewById(R.id.num0);
        Button num1 = findViewById(R.id.num1);
        Button num2 = findViewById(R.id.num2);
        Button num3 = findViewById(R.id.num3);
        Button num4 = findViewById(R.id.num4);
        Button num5 = findViewById(R.id.num5);
        Button num6 = findViewById(R.id.num6);
        Button num7 = findViewById(R.id.num7);
        Button num8 = findViewById(R.id.num8);
        Button num9 = findViewById(R.id.num9);

        Button on = findViewById(R.id.on);
        Button off = findViewById(R.id.off);
        Button ac = findViewById(R.id.ac);
        Button del = findViewById(R.id.del);
        Button div = findViewById(R.id.div);
        Button time = findViewById(R.id.time);
        Button min = findViewById(R.id.minus);
        Button equal = findViewById(R.id.equal);
        Button add = findViewById(R.id.add);
        Button point = findViewById(R.id.point);

        TextView screen = findViewById(R.id.screen);

        ac.setOnClickListener(view -> {
            firstNum = 0;
            screen.setText("0");
        });

        off.setOnClickListener(view -> screen.setVisibility(View.GONE));
        on.setOnClickListener(view -> {
            screen.setVisibility(View.VISIBLE);
            screen.setText("0");
        });

        ArrayList<Button> nums = new ArrayList<>();
        nums.add(num0);
        nums.add(num1);
        nums.add(num2);
        nums.add(num3);
        nums.add(num4);
        nums.add(num5);
        nums.add(num6);
        nums.add(num7);
        nums.add(num8);
        nums.add(num9);

        for (Button b : nums) {
            b.setOnClickListener(view -> {
                String currentText = screen.getText().toString();
                if (currentText.equals("0")) {
                    screen.setText(b.getText().toString());
                } else {
                    screen.setText(currentText + b.getText().toString());
                }
                blinkButton(b);
            });
        }

        ArrayList<Button> opers = new ArrayList<>();
        opers.add(div);
        opers.add(time);
        opers.add(add);
        opers.add(min);

        for (Button b : opers) {
            b.setOnClickListener(view -> {
                firstNum = Double.parseDouble(screen.getText().toString());
                operation = b.getText().toString();
                screen.setText("0");
                blinkButton(b);
            });
        }

        del.setOnClickListener(view -> {
            String num = screen.getText().toString();
            if (num.length() > 1) {
                screen.setText(num.substring(0, num.length() - 1));
            } else if (num.length() == 1 && !num.equals("0")) {
                screen.setText("0");
            }
            blinkButton(del);
        });

        point.setOnClickListener(view -> {
            if (!screen.getText().toString().contains(".")) {
                screen.setText(screen.getText().toString() + ".");
            }
            blinkButton(point);
        });

        equal.setOnClickListener(view -> {
            double secondNum = Double.parseDouble(screen.getText().toString());
            double result;
            switch (operation) {
                case "/":
                    result = firstNum / secondNum;
                    break;
                case "X":
                    result = firstNum * secondNum;
                    break;
                case "+":
                    result = firstNum + secondNum;
                    break;
                case "-":
                    result = firstNum - secondNum;
                    break;
                default:
                    result = firstNum + secondNum;
            }
            screen.setText(String.valueOf(result));
            firstNum = result;
            blinkButton(equal);
        });
    }

    // Method to handle button blinking
    private void blinkButton(final Button button) {
        // Change the button's visibility or background color
        button.setVisibility(View.INVISIBLE);

        // Post a delayed task to revert the button's visibility or background color after 200 milliseconds
        handler.postDelayed(() -> button.setVisibility(View.VISIBLE), 200);
    }
}


